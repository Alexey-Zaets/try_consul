version: '3'

services:

    app:
        container_name: application
        restart: always
        build:
            context: ./app
        tty: true
        volumes:
            - ./app:/usr/src/app:rw
        entrypoint: ./docker_entrypoint.sh
        depends_on:
            - db

    db:
        container_name: database
        image: postgres:latest
        restart: always
        environment:
            POSTGRES_PASSWORD: example
            POSTGRES_USER: user
            POSTGRES_DB: data
        ports:
            - 5432:5432

    nginx:
        container_name: nginx
        image: nginx:latest
        restart: always
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - 80:80
        command: ["nginx", "-g", "daemon off;"]
        depends_on:
            - app

    # redis:
    #     container_name: redis
    #     image: redis:latest
    #     restart: always
    #     command: redis-server --appendonly yes
    #     ports:
    #         - 6379:6379

    consul-server:
        container_name: consul_server
        image: consul:latest
        ports:
            - 8500:8500
            - 8600:8600
        command: "consul agent -server -ui -node=server -bootstrap-expect=1 -enable-script-checks \
                 -client=0.0.0.0 -data-dir /consul/data -config-dir /consul/config"
        depends_on:
            - nginx

    consul-client:
        container_name: consul_client
        image: consul:latest
        command: "consul agent -node=client -join=consul-server -enable-script-checks \
                 -data-dir /consul/data -config-dir /consul/config"
        volumes:
            # - ./redis.json:/consul/config/redis.json
            - ./web.json:/consul/config/web.json
            - ./app.json:/consul/config/app.json
            - ./db.json:/consul/config/db.json
        depends_on:
            - consul-server
